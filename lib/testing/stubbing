#! /bin/bash
#
# Helper functions for creating test stubs for core framework elements

# Replace a module in `_GO_CORE_DIR/lib` with a stub implementation
#
# THIS IS POTENTIALLY DANGEROUS and you MUST call
# `@go.restore_stubbed_core_modules` in your `teardown` function if you use it!
#
# Useful when you need to model core module behavior, but don't want it to do
# real work or want to avoid a potentially complicated test setup.
#
# Arguments:
#   module_name:  Name of the module to stub from `_GO_CORE_DIR/lib`
#   ...:          Lines comprising the stubbed module implementation
@go.create_core_module_stub() {
  local module_path="$_GO_CORE_DIR/lib/$1"
  shift

  if [[ ! -f "$module_path" ]]; then
    echo "No such core module: $module_path" >&2
    return 1
  fi

  cp "$module_path"{,.stubbed}
  echo '#! /bin/bash' > "$module_path"
  printf '%s\n' "$@" >>"$module_path"
  chmod 600 "$module_path"
}

# Restore all core modules stubbed by `@go.create_core_module_stub`
#
# YOU MUST CALL THIS FROM TEARDOWN IF YOU USE `@go.create_core_module_stub`!
@go.restore_stubbed_core_modules() {
  local module

  for module in "$_GO_CORE_DIR/lib"/*.stubbed; do
    mv "$module" "${module%.stubbed}"
  done
}
